<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="02a60422-8322-4606-849d-cc4bd387d66b" name="Changes" comment="백준 2884&#10;- 분이 45보다 작으면 시를 -1 &amp; 분은 60-(45-분) 을 해주어야한다.&#10;또한 시가 0보다 작다면 23시로 변환해준다.">
      <change afterPath="$PROJECT_DIR$/src/backjoon/Number10718.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/backjoon/Number10828.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JavaScript File" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="21s3xTnuubcqkY9KP9wRP8GEQqI" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="project.structure.last.edited" value="Libraries" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="settings.editor.selected.configurable" value="org.jetbrains.plugins.github.ui.GithubSettingsConfigurable" />
  </component>
  <component name="RunManager" selected="Application.Number10718">
    <configuration name="IntStack" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="chap04.IntStack" />
      <module name="Algorithm" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="chap04.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="IntStackTester" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="chap04.IntStackTester" />
      <module name="Algorithm" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="chap04.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Number10718" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="backjoon.Number10718" />
      <module name="Algorithm" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="backjoon.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Number14681" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="backjoon.Number14681" />
      <module name="Algorithm" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="backjoon.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Number2884" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="backjoon.Number2884" />
      <module name="Algorithm" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="backjoon.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Number10718" />
        <item itemvalue="Application.Number2884" />
        <item itemvalue="Application.Number14681" />
        <item itemvalue="Application.IntStackTester" />
        <item itemvalue="Application.IntStack" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="02a60422-8322-4606-849d-cc4bd387d66b" name="Changes" comment="" />
      <created>1638716220814</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1638716220814</updated>
      <workItem from="1638716222727" duration="824000" />
      <workItem from="1639660739945" duration="1327000" />
      <workItem from="1639739808758" duration="1287000" />
      <workItem from="1639812565281" duration="1211000" />
      <workItem from="1639920162002" duration="1143000" />
      <workItem from="1640005559224" duration="1189000" />
      <workItem from="1640094825948" duration="1479000" />
      <workItem from="1640177235589" duration="749000" />
      <workItem from="1640327639141" duration="3136000" />
      <workItem from="1640414864034" duration="5744000" />
      <workItem from="1640611198280" duration="559000" />
      <workItem from="1640787314740" duration="577000" />
      <workItem from="1640792152441" duration="853000" />
      <workItem from="1640940418270" duration="1109000" />
      <workItem from="1641033106399" duration="319000" />
      <workItem from="1641123446056" duration="1778000" />
      <workItem from="1641213939392" duration="713000" />
      <workItem from="1641307071541" duration="306000" />
      <workItem from="1641381352940" duration="2134000" />
      <workItem from="1641559258138" duration="598000" />
      <workItem from="1641732559108" duration="641000" />
      <workItem from="1641900747767" duration="668000" />
      <workItem from="1641989819337" duration="947000" />
      <workItem from="1642077197374" duration="2347000" />
      <workItem from="1642247736021" duration="573000" />
      <workItem from="1642424706334" duration="1499000" />
      <workItem from="1642512243958" duration="466000" />
      <workItem from="1642591944978" duration="750000" />
      <workItem from="1642680854418" duration="818000" />
      <workItem from="1642769724598" duration="778000" />
      <workItem from="1642832177505" duration="1370000" />
      <workItem from="1643022901500" duration="627000" />
      <workItem from="1643120041603" duration="738000" />
      <workItem from="1643209372470" duration="1134000" />
      <workItem from="1643454121841" duration="889000" />
      <workItem from="1643809268814" duration="167000" />
      <workItem from="1643981557726" duration="857000" />
      <workItem from="1643982498683" duration="266000" />
      <workItem from="1644063903666" duration="1500000" />
      <workItem from="1644240571060" duration="707000" />
      <workItem from="1644330449012" duration="97000" />
      <workItem from="1644416394947" duration="718000" />
      <workItem from="1644468950981" duration="8941000" />
      <workItem from="1644569671338" duration="6722000" />
      <workItem from="1644639097198" duration="1953000" />
      <workItem from="1644664988003" duration="3957000" />
      <workItem from="1644757625183" duration="3139000" />
      <workItem from="1644843380453" duration="2562000" />
      <workItem from="1644936720917" duration="291000" />
      <workItem from="1645018310150" duration="441000" />
      <workItem from="1645018788539" duration="2250000" />
      <workItem from="1645092486908" duration="1568000" />
      <workItem from="1645188167627" duration="7522000" />
      <workItem from="1645286994722" duration="7402000" />
      <workItem from="1645432718594" duration="2835000" />
      <workItem from="1645521566322" duration="611000" />
      <workItem from="1645692938720" duration="52000" />
      <workItem from="1645693001054" duration="1996000" />
    </task>
    <task id="LOCAL-00001" summary="import test in IntelliJ">
      <created>1638716398464</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1638716398464</updated>
    </task>
    <task id="LOCAL-00002" summary="Find min in three number">
      <created>1639661767807</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1639661767807</updated>
    </task>
    <task id="LOCAL-00003" summary="Find min in four number">
      <created>1639921294463</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1639921294463</updated>
    </task>
    <task id="LOCAL-00004" summary="Loop&#10;- sum with while">
      <created>1640006155087</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1640006155087</updated>
    </task>
    <task id="LOCAL-00005" summary="Loop&#10;- while문이 종료될 때 변수 i 값이 n+1이 됨을 확인">
      <created>1640096190718</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1640096190718</updated>
    </task>
    <task id="LOCAL-00006" summary="Loop&#10;- For문을 이용한 1부터 n까지의 합">
      <created>1640177964919</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1640177964919</updated>
    </task>
    <task id="LOCAL-00007" summary="Loop&#10;- For문을 이용한 1부터 n까지의 합&#10;- ex) n이 3이면 1 + 2 + 3 = 6으로 출력되도록 작성">
      <created>1640347210182</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1640347210182</updated>
    </task>
    <task id="LOCAL-00008" summary="Loop&#10;- 가우스의 덧셈을 이용하여 1부터 n까지의 정수 합을 구함">
      <created>1640434554521</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1640434554521</updated>
    </task>
    <task id="LOCAL-00009" summary="Loop&#10;- 정수 a,b를 포함하여 그 사이의 모든 정수의 합을 구하여 반환">
      <created>1640489121249</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1640489121250</updated>
    </task>
    <task id="LOCAL-00010" summary="Loop&#10;- do문 while(제어식);&#10;- 0이하의 값이 입력될 경우 계속해서 'n의 값:'이라고 출력 됨">
      <created>1640611724002</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1640611724002</updated>
    </task>
    <task id="LOCAL-00011" summary="Loop&#10;- do문 while(제어식);&#10;- 2자리의 양수 값만 출력">
      <created>1640787535196</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1640787535196</updated>
    </task>
    <task id="LOCAL-00012" summary="Loop&#10;- 이중 for문으로 9*9테이블 생성">
      <created>1640793458421</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1640793458421</updated>
    </task>
    <task id="LOCAL-00013" summary="Array&#10;- Clone">
      <created>1641033399581</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1641033399582</updated>
    </task>
    <task id="LOCAL-00014" summary="Array&#10;- 배열 요소의 최댓값 구하기">
      <created>1641131910723</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1641131910723</updated>
    </task>
    <task id="LOCAL-00015" summary="Array&#10;- 배열의 요소를 난수로 받아 최댓값 구하기">
      <created>1641214605918</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1641214605918</updated>
    </task>
    <task id="LOCAL-00016" summary="Array&#10;- 배열 요소를 역순으로 정렬">
      <created>1641393160143</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1641393160143</updated>
    </task>
    <task id="LOCAL-00017" summary="file test">
      <created>1641732602357</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1641732602357</updated>
    </task>
    <task id="LOCAL-00018" summary="1000 이하의 소수를 나열">
      <created>1641990170954</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1641990170954</updated>
    </task>
    <task id="LOCAL-00019" summary="BufferedReader 기초">
      <created>1642084559960</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1642084559960</updated>
    </task>
    <task id="LOCAL-00020" summary="문자열의 길이가 4 혹은 6이고, 숫자로만 구성되어있는지 확인">
      <created>1642248306162</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1642248306162</updated>
    </task>
    <task id="LOCAL-00021" summary="입력 받은 10진수를 2진수~36진수로 기수 변환">
      <created>1642426566323</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1642426566323</updated>
    </task>
    <task id="LOCAL-00022" summary="버블 정렬">
      <created>1642512667740</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1642512667740</updated>
    </task>
    <task id="LOCAL-00023" summary="1~30 3의 배수이면 Fizz, 5의 배수이면 Buzz, 3과 5의 배수이면 FizzBuzz 출력">
      <created>1642596063704</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1642596063704</updated>
    </task>
    <task id="LOCAL-00024" summary="Create Quiz">
      <created>1642769905428</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1642769905428</updated>
    </task>
    <task id="LOCAL-00025" summary="나누어 떨어지는 숫자 배열">
      <created>1642857677927</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1642857677927</updated>
    </task>
    <task id="LOCAL-00026" summary="1000 이하의 소수를 모두 나열">
      <created>1643120751861</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1643120751861</updated>
    </task>
    <task id="LOCAL-00027" summary="Revision 54 수정&#10;- 음수가 들어오더라도 합할 수 있도록 Math.abs() 추가">
      <created>1643209912259</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1643209912259</updated>
    </task>
    <task id="LOCAL-00028" summary="확장 for문">
      <created>1643454368353</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1643454368353</updated>
    </task>
    <task id="LOCAL-00029" summary="simple grammer&#10;- return 활용">
      <created>1643809416926</created>
      <option name="number" value="00029" />
      <option name="presentableId" value="LOCAL-00029" />
      <option name="project" value="LOCAL" />
      <updated>1643809416926</updated>
    </task>
    <task id="LOCAL-00030" summary="무작위 번호 6개 뽑기">
      <created>1643982413903</created>
      <option name="number" value="00030" />
      <option name="presentableId" value="LOCAL-00030" />
      <option name="project" value="LOCAL" />
      <updated>1643982413903</updated>
    </task>
    <task id="LOCAL-00031" summary="선형 검색을 구현&#10;- 특정 값이 몇 번째 인덱스인지 검색">
      <created>1644064448155</created>
      <option name="number" value="00031" />
      <option name="presentableId" value="LOCAL-00031" />
      <option name="project" value="LOCAL" />
      <updated>1644064448155</updated>
    </task>
    <task id="LOCAL-00032" summary="선형 검색을 구현&#10;- while문 대신 for문을 사용하여 간단하게 특정 값이 몇 번째 인덱스인지 검색">
      <created>1644146011290</created>
      <option name="number" value="00032" />
      <option name="presentableId" value="LOCAL-00032" />
      <option name="project" value="LOCAL" />
      <updated>1644146011290</updated>
    </task>
    <task id="LOCAL-00033" summary="수열 1+2+4+7+11+16+...&#10;20번 반복 시 결과 값은?">
      <created>1644241278143</created>
      <option name="number" value="00033" />
      <option name="presentableId" value="LOCAL-00033" />
      <option name="project" value="LOCAL" />
      <updated>1644241278143</updated>
    </task>
    <task id="LOCAL-00034" summary="1~10000 사이의 수에 8이 몇 번 나타나는가?">
      <created>1644417109431</created>
      <option name="number" value="00034" />
      <option name="presentableId" value="LOCAL-00034" />
      <option name="project" value="LOCAL" />
      <updated>1644417109431</updated>
    </task>
    <task id="LOCAL-00035" summary="backjoon 11720&#10;- N개의 숫자가 공백 없이 쓰여있다. 이 숫자를 모두 합해서 출력하는 프로그램을 작성">
      <created>1644580618503</created>
      <option name="number" value="00035" />
      <option name="presentableId" value="LOCAL-00035" />
      <option name="project" value="LOCAL" />
      <updated>1644580618503</updated>
    </task>
    <task id="LOCAL-00036" summary="backjoon 10809&#10;- indexOf()&#10;- 알파벳 소문자로만 이루어진 단어 S가 주어진다. 각각의 알파벳에 대해서, 단어에 포함되어 있는 경우에는 처음 등장하는 위치를, 포함되어 있지 않은 경우에는 -1을 출력하는 프로그램을 작성">
      <created>1644675921960</created>
      <option name="number" value="00036" />
      <option name="presentableId" value="LOCAL-00036" />
      <option name="project" value="LOCAL" />
      <updated>1644675921960</updated>
    </task>
    <task id="LOCAL-00037" summary="backjoon 10818&#10;- N개의 정수가 주어진다. 이때, 최솟값과 최댓값을 구하는 프로그램을 작성">
      <created>1644760988508</created>
      <option name="number" value="00037" />
      <option name="presentableId" value="LOCAL-00037" />
      <option name="project" value="LOCAL" />
      <updated>1644760988508</updated>
    </task>
    <task id="LOCAL-00038" summary="backjoon 2675&#10;- 문자열 반복&#10;- 삼중 for문을 사용하여 해결하였다. split을 사용하여 공백을 분리하여 한 줄에 입력되는 데이터를 반복횟수와 문자열을 구분하였다. char배열을 생성하지 않고 단순하게 String을 charAt으로 잘라내어 필요한 답을 출력하였다.">
      <created>1644845947334</created>
      <option name="number" value="00038" />
      <option name="presentableId" value="LOCAL-00038" />
      <option name="project" value="LOCAL" />
      <updated>1644845947334</updated>
    </task>
    <task id="LOCAL-00039" summary="backjoon 2753&#10;-">
      <created>1644937003130</created>
      <option name="number" value="00039" />
      <option name="presentableId" value="LOCAL-00039" />
      <option name="project" value="LOCAL" />
      <updated>1644937003130</updated>
    </task>
    <task id="LOCAL-00040" summary="backjoon 10950&#10;- StringTokenizer를 사용하여 공백을 기준으로 문자열을 분리해주고, StringBuilder를 사용하여 A+B 값을 모두 저장한다.">
      <created>1645021046815</created>
      <option name="number" value="00040" />
      <option name="presentableId" value="LOCAL-00040" />
      <option name="project" value="LOCAL" />
      <updated>1645021046815</updated>
    </task>
    <task id="LOCAL-00041" summary="backjoon 2739&#10;- for문 이용 간단한 구구단 구현">
      <created>1645093564372</created>
      <option name="number" value="00041" />
      <option name="presentableId" value="LOCAL-00041" />
      <option name="project" value="LOCAL" />
      <updated>1645093564372</updated>
    </task>
    <task id="LOCAL-00042" summary="backjoon 10952&#10;- 맨 마지막에 0 0 을 입력 받는 것을 활용하여 while문으로 입력 값들을 받아준다.&#10;Stringbuilder를 사용하여 합계를 담아서 출력해준다.">
      <created>1645194191540</created>
      <option name="number" value="00042" />
      <option name="presentableId" value="LOCAL-00042" />
      <option name="project" value="LOCAL" />
      <updated>1645194191540</updated>
    </task>
    <task id="LOCAL-00043" summary="backjoon 10951&#10;- 입력이 끝나는 지점이 주어지지 않으므로 EOF 처리를 해야한다.&#10;EOF (End Of File) : 데이터 소스로부터 더 이상 읽을 수 있는 데이터가 없음을 나타내는 용어&#10;BufferedWriter로 출력을 할 경우 String으로 출력 되므로 정수형은 String으로 변환해주어야 한다.">
      <created>1645197657767</created>
      <option name="number" value="00043" />
      <option name="presentableId" value="LOCAL-00043" />
      <option name="project" value="LOCAL" />
      <updated>1645197657767</updated>
    </task>
    <task id="LOCAL-00044" summary="스택의 기본&#10;- 생성자, push, pop, peek, indexOf, clear, capacity, size, isEmpty, isFull, dump">
      <created>1645340191729</created>
      <option name="number" value="00044" />
      <option name="presentableId" value="LOCAL-00044" />
      <option name="project" value="LOCAL" />
      <updated>1645340191729</updated>
    </task>
    <task id="LOCAL-00045" summary="스택의 기본 테스트&#10;- 앞서 정의해둔 메서드들(IntStack.java)을 사용하여 푸시, 팝, 피크, 덤프를 해볼 수 있는 프로그램 작성">
      <created>1645340903952</created>
      <option name="number" value="00045" />
      <option name="presentableId" value="LOCAL-00045" />
      <option name="project" value="LOCAL" />
      <updated>1645340903952</updated>
    </task>
    <task id="LOCAL-00046" summary="백준 2884&#10;- 분이 45보다 작으면 시를 -1 &amp; 분은 60-(45-분) 을 해주어야한다.&#10;또한 시가 0보다 작다면 23시로 변환해준다.">
      <created>1645434920286</created>
      <option name="number" value="00046" />
      <option name="presentableId" value="LOCAL-00046" />
      <option name="project" value="LOCAL" />
      <updated>1645434920286</updated>
    </task>
    <task id="LOCAL-00047" summary="백준 2884&#10;- 분이 45보다 작으면 시를 -1 &amp; 분은 60-(45-분) 을 해주어야한다.&#10;또한 시가 0보다 작다면 23시로 변환해준다.">
      <created>1645435285679</created>
      <option name="number" value="00047" />
      <option name="presentableId" value="LOCAL-00047" />
      <option name="project" value="LOCAL" />
      <updated>1645435285679</updated>
    </task>
    <task id="LOCAL-00048" summary="백준 2884&#10;- 분이 45보다 작으면 시를 -1 &amp; 분은 60-(45-분) 을 해주어야한다.&#10;또한 시가 0보다 작다면 23시로 변환해준다.">
      <created>1645435377457</created>
      <option name="number" value="00048" />
      <option name="presentableId" value="LOCAL-00048" />
      <option name="project" value="LOCAL" />
      <updated>1645435377457</updated>
    </task>
    <option name="localTasksCounter" value="49" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="버블 정렬" />
    <MESSAGE value="1~30 3의 배수이면 Fizz, 5의 배수이면 Buzz, 3과 5의 배수이면 FizzBuzz 출력" />
    <MESSAGE value="Create Quiz" />
    <MESSAGE value="나누어 떨어지는 숫자 배열" />
    <MESSAGE value="1000 이하의 소수를 모두 나열" />
    <MESSAGE value="Revision 54 수정&#10;- 음수가 들어오더라도 합할 수 있도록 Math.abs() 추가" />
    <MESSAGE value="확장 for문" />
    <MESSAGE value="simple grammer&#10;- return 활용" />
    <MESSAGE value="무작위 번호 6개 뽑기" />
    <MESSAGE value="선형 검색을 구현&#10;- 특정 값이 몇 번째 인덱스인지 검색" />
    <MESSAGE value="선형 검색을 구현&#10;- while문 대신 for문을 사용하여 간단하게 특정 값이 몇 번째 인덱스인지 검색" />
    <MESSAGE value="수열 1+2+4+7+11+16+...&#10;20번 반복 시 결과 값은?" />
    <MESSAGE value="1~10000 사이의 수에 8이 몇 번 나타나는가?" />
    <MESSAGE value="backjoon 11720&#10;- N개의 숫자가 공백 없이 쓰여있다. 이 숫자를 모두 합해서 출력하는 프로그램을 작성" />
    <MESSAGE value="backjoon 10809&#10;- indexOf()&#10;- 알파벳 소문자로만 이루어진 단어 S가 주어진다. 각각의 알파벳에 대해서, 단어에 포함되어 있는 경우에는 처음 등장하는 위치를, 포함되어 있지 않은 경우에는 -1을 출력하는 프로그램을 작성" />
    <MESSAGE value="backjoon 10818&#10;- N개의 정수가 주어진다. 이때, 최솟값과 최댓값을 구하는 프로그램을 작성" />
    <MESSAGE value="backjoon 2675&#10;- 문자열 반복&#10;- 삼중 for문을 사용하여 해결하였다. split을 사용하여 공백을 분리하여 한 줄에 입력되는 데이터를 반복횟수와 문자열을 구분하였다. char배열을 생성하지 않고 단순하게 String을 charAt으로 잘라내어 필요한 답을 출력하였다." />
    <MESSAGE value="backjoon 2753&#10;-" />
    <MESSAGE value="backjoon 10950&#10;- StringTokenizer를 사용하여 공백을 기준으로 문자열을 분리해주고, StringBuilder를 사용하여 A+B 값을 모두 저장한다." />
    <MESSAGE value="backjoon 2739&#10;- for문 이용 간단한 구구단 구현" />
    <MESSAGE value="backjoon 10952&#10;- 맨 마지막에 0 0 을 입력 받는 것을 활용하여 while문으로 입력 값들을 받아준다.&#10;Stringbuilder를 사용하여 합계를 담아서 출력해준다." />
    <MESSAGE value="backjoon 10951&#10;- 입력이 끝나는 지점이 주어지지 않으므로 EOF 처리를 해야한다.&#10;EOF (End Of File) : 데이터 소스로부터 더 이상 읽을 수 있는 데이터가 없음을 나타내는 용어&#10;BufferedWriter로 출력을 할 경우 String으로 출력 되므로 정수형은 String으로 변환해주어야 한다." />
    <MESSAGE value="스택의 기본&#10;- 생성자, push, pop, peek, indexOf, clear, capacity, size, isEmpty, isFull, dump" />
    <MESSAGE value="스택의 기본 테스트&#10;- 앞서 정의해둔 메서드들(IntStack.java)을 사용하여 푸시, 팝, 피크, 덤프를 해볼 수 있는 프로그램 작성" />
    <MESSAGE value="백준 2884&#10;- 분이 45보다 작으면 시를 -1 &amp; 분은 60-(45-분) 을 해주어야한다.&#10;또한 시가 0보다 작다면 23시로 변환해준다." />
    <option name="LAST_COMMIT_MESSAGE" value="백준 2884&#10;- 분이 45보다 작으면 시를 -1 &amp; 분은 60-(45-분) 을 해주어야한다.&#10;또한 시가 0보다 작다면 23시로 변환해준다." />
  </component>
</project>